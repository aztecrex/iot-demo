AWSTemplateFormatVersion: '2010-09-09'

Resources:

  ControlFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
            Effect: Allow
            Action: sts:AssumeRole
            Principal:
                Service: lambda.amazonaws.com
      Policies:
        - PolicyName: pipeline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iot:Connect
                  - iot:Publish
                  - iot:Subscribe
                  - iot:Receive
                  - iot:UpdateThingShadow
                  - iot:GetThingShadow
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - "*"

  PresentationMasterFunction:
    Type: AWS::Lambda::Function
    Properties:
        Code:
            ZipFile: >
                exports.handler = (event, context, callback) => {
                    console.log("gen content placeholder invoked with ", event);
                    callback(null, {});
                };
        Handler: index.handler
        Role: !GetAtt ControlFunctionRole.Arn
        Runtime: nodejs6.10
        Environment:
          Variables:
            IOT_ENDPOINT: ad78o9k6p57sk.iot.us-east-1.amazonaws.com
            IOT_THING: iot-demo-thing-Presentation-Device-1ROQMZ1DS7LHY

  MatrixPositionFunction:
    Type: AWS::Lambda::Function
    Properties:
        Code:
            ZipFile: >
                exports.handler = (event, context, callback) => {
                    console.log("gen content placeholder invoked with ", event);
                    callback(null, {});
                };
        Handler: index.handler
        Role: !GetAtt ControlFunctionRole.Arn
        Runtime: nodejs6.10
        Environment:
          Variables:
            IOT_ENDPOINT: ad78o9k6p57sk.iot.us-east-1.amazonaws.com
            IOT_THING: iot-demo-thing-Matrix0-Device-163UIKMS5LRI3

  PowerDispatchFunction:
    Type: AWS::Lambda::Function
    Properties:
        Code:
            ZipFile: >
                exports.handler = (event, context, callback) => {
                    console.log("gen content placeholder invoked with ", event);
                    callback(null, {});
                };
        Handler: index.handler
        Role: !GetAtt ControlFunctionRole.Arn
        Runtime: nodejs6.10
        Environment:
          Variables:
            IOT_ENDPOINT: ad78o9k6p57sk.iot.us-east-1.amazonaws.com
            IOT_THING_RING0: iot-demo-thing-Ring0-Device-759W16L3V7JJ
            IOT_THING_RING1: iot-demo-thing-Ring1-Device-GF47OOHQKUBT
            IOT_THING_LANYARD: iot-demo-thing-Lanyard-Device-YY67CDETS8PP
            IOT_THING_PRESENTATION: iot-demo-thing-Presentation-Device-1ROQMZ1DS7LHY

  PowerSwitchRule:
    Type: AWS::IoT::TopicRule
    Properties:
      TopicRulePayload:
        Actions:
          - Lambda:
              FunctionArn: !GetAtt PowerDispatchFunction.Arn
        RuleDisabled: false
        Sql: SELECT * FROM '$aws/things/iot-demo-thing-LightSwitch-Device-W8NX19X0CBKG/shadow/update'

  PoserDispatchFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
        FunctionName: !GetAtt PowerDispatchFunction.Arn
        Action: lambda:InvokeFunction
        Principal: iot.amazonaws.com
        SourceArn: !GetAtt PowerSwitchRule.Arn

  SlidesButtonFunction:
    Type: AWS::Lambda::Function
    Properties:
        Code:
            ZipFile: >
                exports.handler = (event, context, callback) => {
                    console.log("gen content placeholder invoked with ", event);
                    callback(null, {});
                };
        Handler: index.handler
        Role: !GetAtt ControlFunctionRole.Arn
        Runtime: nodejs6.10
        Environment:
          Variables:
            IOT_ENDPOINT: ad78o9k6p57sk.iot.us-east-1.amazonaws.com
            IOT_THING: SBHS_Presentation

  SlidesButtonRule:
    Type: AWS::IoT::TopicRule
    Properties:
      TopicRulePayload:
        Actions:
          - Lambda:
              FunctionArn: !GetAtt SlidesButtonFunction.Arn
        RuleDisabled: false
        Sql: SELECT * FROM 'iotbutton/G030MD046147K438'

  IoTFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
        FunctionName: !GetAtt SlidesButtonFunction.Arn
        Action: lambda:InvokeFunction
        Principal: iot.amazonaws.com
        SourceArn: !GetAtt SlidesButtonRule.Arn


  ControllerUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: ControllerUserPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt PresentationMasterFunction.Arn

  ControllerUserCredentials:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 2
      UserName: !Ref ControllerUser

  MatrixUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: ControllerUserPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt MatrixPositionFunction.Arn

  MatrixUserCredentials:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 2
      UserName: !Ref MatrixUser


Outputs:
  SlidesButtonFunction:
    Value: !Ref SlidesButtonFunction
  SlidesButtonFunctionArn:
    Value: !GetAtt SlidesButtonFunction.Arn
  PowerDispatchFunction:
    Value: !Ref PowerDispatchFunction
  MatrixPositionFunction:
    Value: !Ref MatrixPositionFunction
  MatrixPositionFunctionArn:
    Value: !GetAtt MatrixPositionFunction.Arn
  PowerDispatchFunctionArn:
    Value: !GetAtt PowerDispatchFunction.Arn
  ControllerUser:
    Value: !Ref ControllerUserCredentials
  ControllerUserSecret:
    Value: !GetAtt ControllerUserCredentials.SecretAccessKey
  MatrixUser:
    Value: !Ref MatrixUserCredentials
  MatrixUserSecret:
    Value: !GetAtt MatrixUserCredentials.SecretAccessKey
  PresentationMasterFunction:
    Value: !Ref PresentationMasterFunction


