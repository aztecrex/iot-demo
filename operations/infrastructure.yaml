AWSTemplateFormatVersion: '2010-09-09'

# Parameters:
#     ZoneBase:
#         Type: String
#         Description: DNS zone in Route53
#         Default: infra.cjpowered.com
#     DNSName:
#         Type: String
#         Default: operations
#         Description: Site name relative to DNS zone


Resources:

    WebsiteOrigin:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain

    WebsiteOriginPrincipal:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: Finance application static website

    WebsiteOriginAccessPolicy:
        Type: AWS::S3::BucketPolicy
        DependsOn: WebsiteOriginPrincipal
        Properties:
            Bucket: !Ref WebsiteOrigin
            PolicyDocument:
                Statement:
                  - Action:
                      - s3:GetObject
                    Effect: Allow
                    Resource: !Sub arn:aws:s3:::${WebsiteOrigin}/*
                    Principal:
                        CanonicalUser: !GetAtt WebsiteOriginPrincipal.S3CanonicalUserId

    # CDN:
    #     Type: AWS::CloudFront::Distribution
    #     Properties:
    #         DistributionConfig:
    #             DefaultRootObject : index.html
    #             DefaultCacheBehavior:
    #                 Compress: true
    #                 ForwardedValues:
    #                     QueryString: false
    #                 TargetOriginId: origin
    #                 ViewerProtocolPolicy: redirect-to-https
    #             Enabled: true
    #             Origins:
    #               - DomainName: !GetAtt WebsiteOrigin.DomainName
    #                 Id: origin
    #                 S3OriginConfig:
    #                     OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${WebsiteOriginPrincipal}
    #             Aliases:
    #                 - iot-demo.banjocreek.io
    #             ViewerCertificate:
    #                 SslSupportMethod: sni-only
    #                 AcmCertificateArn:
    #                   - todo

    #             CustomErrorResponses:
    #               - ErrorCode: 403
    #                 ResponseCode: 404
    #                 ResponsePagePath: /error.html

    # WebsiteDomain:
    #     Type: AWS::Route53::RecordSet
    #     Properties:
    #         AliasTarget:
    #             DNSName: !GetAtt CDN.DomainName
    #             ## CloudFront specific HostedZoneId
    #             ## http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid
    #             HostedZoneId: Z2FDTNDATAQYW2
    #         HostedZoneName: !Sub ${ZoneBase}.
    #         Name: !Sub ${DNSName}.${ZoneBase}.
    #         Type: A

    # this is a weird dependency. we can't use the cj.com domain until it is verified
    # but it also has a subject alternative name at infra.cjpowered.com. So we need
    # to validate the subject alternative while SYSTEMS is working on the cj.com CNAMEs.
    # Once that is done, we can use this certificate instead of the vanity certificate
    CertificateValidationDomain:
        Type: AWS::Route53::RecordSet
        Condition: ProductionDomain
        Properties:
            HostedZoneName: !Sub ${ZoneBase}.
            Name: !Sub _4c3bc6aa770b07b072cd9c5484e1e96c.${DNSName}.${ZoneBase}.
            Type: CNAME
            TTL: 120
            ResourceRecords:
              - _783b7d39c632243b5b8c58ca24191283.acm-validations.aws.

# Outputs:
#     WebsiteOrigin:
#         Value: !Ref WebsiteOrigin
#     NonVanitySite:
#         Value: !Sub https://${WebsiteDomain}
#     VanitySite:
#         Value: !Sub https://operations.cj.com
